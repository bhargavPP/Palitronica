// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PalitronicaDemo.Model;

#nullable disable

namespace PalitronicaDemo.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20230714005103_InitialDbContextMigration")]
    partial class InitialDbContextMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PalitronicaDemo.Model.Customer", b =>
                {
                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("state")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("zip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = "123",
                            CustomerName = "Dunder Mifflin Paper Company",
                            city = "Scranton",
                            country = "US",
                            state = "PA",
                            street = "1725 Slough Avenue",
                            zip = "18504"
                        },
                        new
                        {
                            CustomerId = "456",
                            CustomerName = "Test2",
                            city = "Scranton",
                            country = "US",
                            state = "FL",
                            street = "1725 Slough Avenue",
                            zip = "234565"
                        });
                });

            modelBuilder.Entity("PalitronicaDemo.Model.Item", b =>
                {
                    b.Property<string>("ItemId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ItemId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            ItemId = "1",
                            CustomerId = "123",
                            Name = "Item 1",
                            Price = 0m,
                            Quantity = 5
                        },
                        new
                        {
                            ItemId = "2",
                            CustomerId = "456",
                            Name = "Item2",
                            Price = 0m,
                            Quantity = 2
                        },
                        new
                        {
                            ItemId = "3",
                            CustomerId = "123",
                            Name = "Item 2",
                            Price = 0m,
                            Quantity = 3
                        },
                        new
                        {
                            ItemId = "4",
                            CustomerId = "456",
                            Name = "Item 3",
                            Price = 0m,
                            Quantity = 6
                        });
                });

            modelBuilder.Entity("PalitronicaDemo.Model.Item", b =>
                {
                    b.HasOne("PalitronicaDemo.Model.Customer", "Customer")
                        .WithMany("Items")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("PalitronicaDemo.Model.Customer", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
